% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggnetwork_plot.R
\name{ggnetwork_plot}
\alias{ggnetwork_plot}
\title{Generate network plot}
\usage{
ggnetwork_plot(
  phenoNet,
  colour_column = "fold_change",
  colour_label = "Fold change",
  interactive = FALSE,
  tooltip = "hover",
  verbose = TRUE
)
}
\arguments{
\item{phenoNet}{The network object created using create_network_object}

\item{colour_column}{column name of the variable to be mapped
to colour \<string\>}

\item{colour_label}{A label for the colour figure legend \<string\>.}

\item{interactive}{Make the plot interactive with \link[plotly]{ggplotly}.}

\item{tooltip}{a character vector specifying which aesthetic mappings to show
in the tooltip. The default, "all", means show all the aesthetic mappings
(including the unofficial "text" aesthetic). The order of variables here will
also control the order they appear. For example, use
\code{tooltip = c("y", "x", "colour")} if you want y first, x second, and
colour last.}

\item{verbose}{Print messages.}
}
\value{
A network plot (compatible with interactive plotly rendering).
}
\description{
This creates a network plot which is compatible with plotly
to make interactive plots.
It makes it possible to hover box that includes your results related to
each phenotype and/or a description of the phenotypes.
}
\examples{
library(ontologyIndex)
data(hpo)
phenos = make_phenos_dataframe(hpo = hpo,
                               ancestor = "Neurodevelopmental delay",
                               add_description = FALSE)
phenos <- make_hoverboxes(phenos_dataframe = phenos)
adjacency <- adjacency_matrix(unique(phenos$HPO_Id), hpo)
phenoNet <- make_network_object(phenos = phenos,
                                adjacency = adjacency,
                                hpo = hpo,
                                colour_column = "ontLvl_geneCount_ratio")
plt <- ggnetwork_plot(phenoNet = phenoNet,
                      colour_column = "ontLvl_geneCount_ratio",
                      colour_label = "OntLvl/nGenes")
}
